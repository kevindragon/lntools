["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$re-frame.core","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^9","~$subs","~$re-frame.subs","~$cofx","~$re-frame.cofx","~$re-frame.interceptor","^>","~$fx","~$re-frame.fx","~$re-frame.events","^A","~$loggers","~$re-frame.loggers","^@","^@","~$re-frame.registrar","^D","~$interceptor","^>","~$router","~$re-frame.router","~$db","~$re-frame.db","~$registrar","^D","^G","^G","~$events","^A","~$re-frame.std-interceptors","^L","^C","^C","^;","^;","~$interop","^9","~$std-interceptors","^L","^=","^=","^I","^I"],"~:uses",["^ ","~$ctx-handler->interceptor","^L","~$fx-handler->interceptor","^L","~$db-handler->interceptor","^L"],"~:defs",["^ ","~$console",["^ ","^5","~$re-frame.core/console","~:file","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","~:line",109,"~:column",1,"~:end-line",109,"~:end-column",13,"~:meta",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",109,"^X",6,"^Y",109,"^Z",13]],"~$on-changes",["^ ","^5","~$re-frame.core/on-changes","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",43,"^X",1,"^Y",43,"^Z",16,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",43,"^X",6,"^Y",43,"^Z",16]],"~$enrich",["^ ","^5","~$re-frame.core/enrich","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",40,"^X",1,"^Y",40,"^Z",12,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",40,"^X",6,"^Y",40,"^Z",12]],"~$reg-sub-raw",["^ ","^5","~$re-frame.core/reg-sub-raw","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",47,"^X",1,"^Y",47,"^Z",17,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",47,"^X",6,"^Y",47,"^Z",17]],"~$subscribe",["^ ","^5","~$re-frame.core/subscribe","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",49,"^X",1,"^Y",49,"^Z",15,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",49,"^X",6,"^Y",49,"^Z",15]],"~$assoc-coeffect",["^ ","^5","~$re-frame.core/assoc-coeffect","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",34,"^X",1,"^Y",34,"^Z",20,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",34,"^X",6,"^Y",34,"^Z",20]],"~$register-sub",["^ ","~:protocol-inline",null,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",175,"^X",7,"^Y",175,"^Z",19,"~:arglists",["~#list",["~$quote",["^1=",[["~$&","~$args"]]]]],"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",0,"~:method-params",[["^1=",["^1?"]]],"^1<",["^1=",[["~$&","^1?"]]],"~:arglists-meta",["^1=",[null]]]],"^5","~$re-frame.core/register-sub","^1A",true,"^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^Z",19,"^1@",["^ ","^1A",true,"^1B",0,"^1C",[["^1=",["^1?"]]],"^1<",["^1=",[["~$&","^1?"]]],"^1D",["^1=",[null]]],"^1C",[["^1=",["^1?"]]],"~:protocol-impl",null,"^1D",["^1=",[null]],"^X",1,"^W",175,"^Y",175,"^1B",0,"~:fn-var",true,"^1<",["^1=",[["~$&","^1?"]]]],"~$remove-post-event-callback",["^ ","^1;",null,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",163,"^X",7,"^Y",163,"^Z",33,"^1<",["^1=",["^1>",["^1=",[["~$id"]]]]]],"^5","~$re-frame.core/remove-post-event-callback","^1A",false,"^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^Z",33,"^1C",["^1=",[["^1I"]]],"^1F",null,"^1D",["^1=",[null,null]],"^X",1,"^W",163,"^Y",163,"^1B",1,"^1G",true,"^1<",["^1=",["^1>",["^1=",[["^1I"]]]]]],"~$path",["^ ","^5","~$re-frame.core/path","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",39,"^X",1,"^Y",39,"^Z",10,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",39,"^X",6,"^Y",39,"^Z",10]],"~$reg-sub",["^ ","^5","~$re-frame.core/reg-sub","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",48,"^X",1,"^Y",48,"^Z",13,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",48,"^X",6,"^Y",48,"^Z",13]],"~$make-restore-fn",["^ ","^1;",null,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",114,"^X",7,"^Y",114,"^Z",22,"^1<",["^1=",["^1>",["^1=",[[]]]]],"~:doc","Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"^5","~$re-frame.core/make-restore-fn","^1A",false,"^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^Z",22,"^1C",["^1=",[[]]],"^1F",null,"^1D",["^1=",[null,null]],"^X",1,"^W",114,"^Y",114,"^1B",0,"^1G",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1P","Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"~$clear-fx",["^ ","^5","~$re-frame.core/clear-fx","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",55,"^X",1,"^Y",55,"^Z",14,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",55,"^X",6,"^Y",55,"^Z",14]],"~$get-effect",["^ ","^5","~$re-frame.core/get-effect","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",32,"^X",1,"^Y",32,"^Z",16,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",32,"^X",6,"^Y",32,"^Z",16]],"~$reg-event-db",["^ ","^1;",null,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",66,"^X",7,"^Y",66,"^Z",19,"^1<",["^1=",["^1>",["^1=",[["^1I","~$db-handler"],["^1I","~$interceptors","^1W"]]]]],"^1P","Register the given `id`, typically a keyword, with the combination of\n  `db-handler` and an interceptor chain.\n  `db-handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors, possibly nested (needs flattenting).\n  `db-handler` is wrapped in an interceptor and added to the end of the chain, so in the end\n   there is only a chain.\n   The necessary effects and coeffects handler are added to the front of the\n   interceptor chain.  These interceptors ensure that app-db is available and updated.","^1@",["^ ","^1A",false,"^1B",3,"^1C",["^1=",[["^1I","^1W"],["^1I","^1X","^1W"]]],"^1<",["^1=",[["^1I","^1W"],["^1I","^1X","^1W"]]],"^1D",["^1=",[null,null]]]],"^5","~$re-frame.core/reg-event-db","^1A",false,"^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^Z",19,"^1@",["^ ","^1A",false,"^1B",3,"^1C",["^1=",[["^1I","^1W"],["^1I","^1X","^1W"]]],"^1<",["^1=",[["^1I","^1W"],["^1I","^1X","^1W"]]],"^1D",["^1=",[null,null]]],"^1C",["^1=",[["^1I","^1W"],["^1I","^1X","^1W"]]],"^1F",null,"^1D",["^1=",[null,null]],"^X",1,"^W",66,"^Y",66,"^1B",3,"^1G",true,"^1<",["^1=",[["^1I","^1W"],["^1I","^1X","^1W"]]],"^1P","Register the given `id`, typically a keyword, with the combination of\n  `db-handler` and an interceptor chain.\n  `db-handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors, possibly nested (needs flattenting).\n  `db-handler` is wrapped in an interceptor and added to the end of the chain, so in the end\n   there is only a chain.\n   The necessary effects and coeffects handler are added to the front of the\n   interceptor chain.  These interceptors ensure that app-db is available and updated."],"~$dispatch-sync",["^ ","^5","~$re-frame.core/dispatch-sync","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",20,"^X",1,"^Y",20,"^Z",19,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",20,"^X",6,"^Y",20,"^Z",19]],"~$clear-event",["^ ","^5","~$re-frame.core/clear-event","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",64,"^X",1,"^Y",64,"^Z",17,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",64,"^X",6,"^Y",64,"^Z",17]],"~$->interceptor",["^ ","^5","~$re-frame.core/->interceptor","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",29,"^X",1,"^Y",29,"^Z",19,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",29,"^X",6,"^Y",29,"^Z",19]],"~$set-loggers!",["^ ","^5","~$re-frame.core/set-loggers!","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",102,"^X",1,"^Y",102,"^Z",18,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",102,"^X",6,"^Y",102,"^Z",18]],"~$inject-cofx",["^ ","^5","~$re-frame.core/inject-cofx","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",59,"^X",1,"^Y",59,"^Z",17,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",59,"^X",6,"^Y",59,"^Z",17]],"~$get-coeffect",["^ ","^5","~$re-frame.core/get-coeffect","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",31,"^X",1,"^Y",31,"^Z",18,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",31,"^X",6,"^Y",31,"^Z",18]],"~$debug",["^ ","^5","~$re-frame.core/debug","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",38,"^X",1,"^Y",38,"^Z",11,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",38,"^X",6,"^Y",38,"^Z",11]],"~$assoc-effect",["^ ","^5","~$re-frame.core/assoc-effect","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",33,"^X",1,"^Y",33,"^Z",18,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",33,"^X",6,"^Y",33,"^Z",18]],"~$enqueue",["^ ","^5","~$re-frame.core/enqueue","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",30,"^X",1,"^Y",30,"^Z",13,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",30,"^X",6,"^Y",30,"^Z",13]],"~$clear-cofx",["^ ","^5","~$re-frame.core/clear-cofx","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",60,"^X",1,"^Y",60,"^Z",16,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",60,"^X",6,"^Y",60,"^Z",16]],"~$reg-event-ctx",["^ ","^1;",null,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",88,"^X",7,"^Y",88,"^Z",20,"^1<",["^1=",["^1>",["^1=",[["^1I","~$handler"],["^1I","^1X","^2C"]]]]],"^1@",["^ ","^1A",false,"^1B",3,"^1C",["^1=",[["^1I","^2C"],["^1I","^1X","^2C"]]],"^1<",["^1=",[["^1I","^2C"],["^1I","^1X","^2C"]]],"^1D",["^1=",[null,null]]]],"^5","~$re-frame.core/reg-event-ctx","^1A",false,"^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^Z",20,"^1@",["^ ","^1A",false,"^1B",3,"^1C",["^1=",[["^1I","^2C"],["^1I","^1X","^2C"]]],"^1<",["^1=",[["^1I","^2C"],["^1I","^1X","^2C"]]],"^1D",["^1=",[null,null]]],"^1C",["^1=",[["^1I","^2C"],["^1I","^1X","^2C"]]],"^1F",null,"^1D",["^1=",[null,null]],"^X",1,"^W",88,"^Y",88,"^1B",3,"^1G",true,"^1<",["^1=",[["^1I","^2C"],["^1I","^1X","^2C"]]]],"~$reg-fx",["^ ","^5","~$re-frame.core/reg-fx","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",54,"^X",1,"^Y",54,"^Z",12,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",54,"^X",6,"^Y",54,"^Z",12]],"~$trim-v",["^ ","^5","~$re-frame.core/trim-v","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",41,"^X",1,"^Y",41,"^Z",12,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",41,"^X",6,"^Y",41,"^Z",12]],"~$clear-sub",["^ ","^5","~$re-frame.core/clear-sub","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",51,"^X",1,"^Y",51,"^Z",15,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",51,"^X",6,"^Y",51,"^Z",15]],"~$dispatch",["^ ","^5","~$re-frame.core/dispatch","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",19,"^X",1,"^Y",19,"^Z",14,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",19,"^X",6,"^Y",19,"^Z",14]],"~$after",["^ ","^5","~$re-frame.core/after","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",42,"^X",1,"^Y",42,"^Z",11,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",42,"^X",6,"^Y",42,"^Z",11]],"~$add-post-event-callback",["^ ","^1;",null,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",142,"^X",7,"^Y",142,"^Z",30,"^1<",["^1=",["^1>",["^1=",[["~$f"],["^1I","~$f"]]]]],"^1P","Registers a function `f` to be called after each event is procecessed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  ","^1@",["^ ","^1A",false,"^1B",2,"^1C",["^1=",[["~$f"],["^1I","~$f"]]],"^1<",["^1=",[["~$f"],["^1I","~$f"]]],"^1D",["^1=",[null,null]]]],"^5","~$re-frame.core/add-post-event-callback","^1A",false,"^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^Z",30,"^1@",["^ ","^1A",false,"^1B",2,"^1C",["^1=",[["~$f"],["^1I","~$f"]]],"^1<",["^1=",[["~$f"],["^1I","~$f"]]],"^1D",["^1=",[null,null]]],"^1C",["^1=",[["~$f"],["^1I","~$f"]]],"^1F",null,"^1D",["^1=",[null,null]],"^X",1,"^W",142,"^Y",142,"^1B",2,"^1G",true,"^1<",["^1=",[["~$f"],["^1I","~$f"]]],"^1P","Registers a function `f` to be called after each event is procecessed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  "],"~$reg-cofx",["^ ","^5","~$re-frame.core/reg-cofx","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",58,"^X",1,"^Y",58,"^Z",14,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",58,"^X",6,"^Y",58,"^Z",14]],"~$reg-event-fx",["^ ","^1;",null,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",81,"^X",7,"^Y",81,"^Z",19,"^1<",["^1=",["^1>",["^1=",[["^1I","~$fx-handler"],["^1I","^1X","^2T"]]]]],"^1@",["^ ","^1A",false,"^1B",3,"^1C",["^1=",[["^1I","^2T"],["^1I","^1X","^2T"]]],"^1<",["^1=",[["^1I","^2T"],["^1I","^1X","^2T"]]],"^1D",["^1=",[null,null]]]],"^5","~$re-frame.core/reg-event-fx","^1A",false,"^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^Z",19,"^1@",["^ ","^1A",false,"^1B",3,"^1C",["^1=",[["^1I","^2T"],["^1I","^1X","^2T"]]],"^1<",["^1=",[["^1I","^2T"],["^1I","^1X","^2T"]]],"^1D",["^1=",[null,null]]],"^1C",["^1=",[["^1I","^2T"],["^1I","^1X","^2T"]]],"^1F",null,"^1D",["^1=",[null,null]],"^X",1,"^W",81,"^Y",81,"^1B",3,"^1G",true,"^1<",["^1=",[["^1I","^2T"],["^1I","^1X","^2T"]]]],"~$register-handler",["^ ","^1;",null,"^[",["^ ","^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^W",170,"^X",7,"^Y",170,"^Z",23,"^1<",["^1=",["^1>",["^1=",[["~$&","^1?"]]]]],"^1@",["^ ","^1A",true,"^1B",0,"^1C",[["^1=",["^1?"]]],"^1<",["^1=",[["~$&","^1?"]]],"^1D",["^1=",[null]]]],"^5","~$re-frame.core/register-handler","^1A",true,"^V","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/core.cljc","^Z",23,"^1@",["^ ","^1A",true,"^1B",0,"^1C",[["^1=",["^1?"]]],"^1<",["^1=",[["~$&","^1?"]]],"^1D",["^1=",[null]]],"^1C",[["^1=",["^1?"]]],"^1F",null,"^1D",["^1=",[null]],"^X",1,"^W",170,"^Y",170,"^1B",0,"^1G",true,"^1<",["^1=",[["~$&","^1?"]]]]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:warn"]],"~:order",["^2["]],"^1P",null]