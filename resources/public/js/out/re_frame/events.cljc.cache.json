["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$re-frame.events","~:imports",null,"~:requires",["^ ","~$re-frame.db","^9","~$re-frame.utils","^:","~$re-frame.interop","^;","~$re-frame.registrar","^<","~$re-frame.loggers","^=","~$interceptor","~$re-frame.interceptor","^?","^?"],"~:uses",["^ ","~$console","^=","~$app-db","^9","~$get-handler","^<","~$first-in-vector","^:","~$empty-queue","^;","~$debug-enabled?","^;","~$register-handler","^<"],"~:defs",["^ ","~$kind",["^ ","^5","~$re-frame.events/kind","~:file","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","~:line",10,"~:column",1,"~:end-line",10,"~:end-column",10,"~:meta",["^ ","^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^L",10,"^M",6,"^N",10,"^O",10]],"~$flatten-and-remove-nils",["^ ","~:protocol-inline",null,"^P",["^ ","^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^L",13,"^M",8,"^N",13,"^O",31,"~:private",true,"~:arglists",["~#list",["~$quote",["^U",[["~$id","~$interceptors"]]]]],"~:doc","~`interceptors` might have nested collections, and contain nil elements.\n  return a flat collection, with all nils removed.\n  This function is 9/10 about giving good error messages"],"^S",true,"^5","~$re-frame.events/flatten-and-remove-nils","~:variadic",false,"^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^O",31,"~:method-params",["^U",[["^W","^X"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^M",1,"^L",13,"^N",13,"~:max-fixed-arity",2,"~:fn-var",true,"^T",["^U",["^V",["^U",[["^W","^X"]]]]],"^Y","~`interceptors` might have nested collections, and contain nil elements.\n  return a flat collection, with all nils removed.\n  This function is 9/10 about giving good error messages"],"~$register",["^ ","^R",null,"^P",["^ ","^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^L",34,"^M",7,"^N",34,"^O",15,"^T",["^U",["^V",["^U",[["^W","^X"]]]]],"^Y","Associate the given event `id` with the given collection of `interceptors`.\n\n   `interceptors` may contain nested collections and there may be nils\n   at any level,so process this sturcuture into a simple, nil-less vector\n   before registration.\n\n   An `event handler` will likely be at the end of the chain (wrapped in an interceptor)."],"^5","~$re-frame.events/register","^[",false,"^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^O",15,"^10",["^U",[["^W","^X"]]],"^11",null,"^12",["^U",[null,null]],"^M",1,"^L",34,"^N",34,"^13",2,"^14",true,"^T",["^U",["^V",["^U",[["^W","^X"]]]]],"^Y","Associate the given event `id` with the given collection of `interceptors`.\n\n   `interceptors` may contain nested collections and there may be nils\n   at any level,so process this sturcuture into a simple, nil-less vector\n   before registration.\n\n   An `event handler` will likely be at the end of the chain (wrapped in an interceptor)."],"~$*handling*",["^ ","^5","~$re-frame.events/*handling*","^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^L",49,"^M",1,"^N",49,"^O",26,"~:dynamic",true,"^P",["^ ","^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^L",49,"^M",16,"^N",49,"^O",26,"^19",true]],"~$handle",["^ ","^R",null,"^P",["^ ","^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^L",51,"^M",7,"^N",51,"^O",13,"^T",["^U",["^V",["^U",[["~$event-v"]]]]],"^Y","Given an event vector, look up the associated intercepter chain, and execute it."],"^5","~$re-frame.events/handle","^[",false,"^K","file:/C:/Users/jiangkx/.m2/repository/re-frame/re-frame/0.8.0/re-frame-0.8.0.jar!/re_frame/events.cljc","^O",13,"^10",["^U",[["^1;"]]],"^11",null,"^12",["^U",[null,null]],"^M",1,"^L",51,"^N",51,"^13",1,"^14",true,"^T",["^U",["^V",["^U",[["^1;"]]]]],"^Y","Given an event vector, look up the associated intercepter chain, and execute it."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:event","~:error"]],"~:order",["^1@","^1A"]],"^Y",null]